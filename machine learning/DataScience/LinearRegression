import numpy as np
from sklearn import linear_model
from sklearn.metrics import mean_squared_error, r2_score
from matplotlib import pyplot as plt

# Create array with the dataset x-values
x=np.arange(-500,500)
print(x)

# Create array with the dataset y-values
delta = np.random.uniform(-15,15,x.size)
y= .5 * x + 11 + delta
print(y)

# Make a 80:20 split for train and test
x_train = x[:-200].reshape( (800,1) )
x_test = x[-200:].reshape( (200,1) )
y_train = y[:-200]
y_test = y[-200:]

print('x_train---')
print (x_train)
print('x_test---')
print (x_test)
print('y_train---')
print (y_train)
print('y_test---')
print (y_test)

# create linear regression model
model = linear_model.LinearRegression()

# train model
model.fit(x_train, y_train)
# print coefficients
print('Coefficient: \n', model.coef_)

# test the training model with the test data
y_pred = model.predict(x_test)

print("Mean squared error: %.2f"
      % mean_squared_error(y_test,y_pred))
print('r_2 statistic: %.2f' % r2_score(y_test, y_pred))

# visualize data
plt.scatter(x_test, y_test)
plt.plot(x_test, y_pred, color='red')
plt.show()
